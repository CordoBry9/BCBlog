@page "/"
@using BCBlog.Client.Models
@using BCBlog.Client.Services.Interfaces
@using BCBlog.Models
@using BCBlog.Services.Interfaces
@using BCBlog.Client.Components.UI
@inject IBlogPostDTOService BlogPostService
@using BCBlog.Components.Layout
@layout SidebarLayout

<PageTitle>Home</PageTitle>

@if (BlogPosts != null)
{
    <div class="container pb-lg-5 pb-md-4 pt-2">
        <div class="row mb-md-2 mb-xl-4">
            <!-- Blog posts -->
            <div class="col pe-lg-4">
                <h1 class="pb-3 pb-lg-4">Blog list with sidebar</h1>

                <!-- Post -->
                @foreach (BlogPostDTO post in BlogPosts.Data)
                {
                    @if (post.IsPublished)
                    {
                        <BlogPostsList BlogPost="post"></BlogPostsList>
                    }
                }
            </div>
            <div class="row row-cols-3 mt-3 gy-3 align-items-center hstack">
                <div class="col col-md-4 col-lg-4 text-center">
                        @if (Page > 1)
                        {
                            <a href="?page=@(Page - 1)"><i class="button-text-color ai-arrow-left fs-2"></i></a>
                        }
                </div>
                <div class="col col-md-4 col-lg-4 text-center">
                    <div class="btn button-color btn-primary w-md-auto w-100">Page @BlogPosts.Page of @BlogPosts.TotalPages</div>
                </div>
                <div class="col col-md-4 col-lg-4 text-center">
                    @if (Page < BlogPosts.TotalPages)
                    {
                        <a href="?page=@(Page + 1)"><i class="button-text-color ai-arrow-right fs-2"></i></a>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code
{
    #region states
    [SupplyParameterFromQuery]
    public int Page { get; set; }

    private int pageSize = 4;
    private PagedList<BlogPostDTO>? BlogPosts = new PagedList<BlogPostDTO>();
    #endregion

    #region methods
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            if (Page < 1) Page = 1;
            BlogPosts = (await BlogPostService.GetPublishedBlogPostsAsync(Page, pageSize));
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
    #endregion
}


