@using BCBlog.Client.Models
 @implements IDisposable
 @inject ICategoryDTOService CategoryService

@inject NavigationManager NavigationManager
<!-- Navbar. Remove 'fixed-top' class to make the navigation bar scrollable with the page -->
<header class="navbar navbar-expand-lg fixed-top">
    <div class="container">

        <!-- Navbar brand (Logo) -->
        <a class="navbar-brand pe-sm-3" href="/">
            <span class="text-primary flex-shrink-0 me-2">
                <img src="/img/BCnewLogo.svg" height="40" width="40" />
            </span>
            <span class="ms-2">Dev Blog</span>
        </a>

        @*        <!-- Theme switcher -->
        <div class="form-check form-switch mode-switch order-lg-2 me-3 me-lg-4 ms-auto" data-bs-toggle="mode">
        <input class="form-check-input" type="checkbox" id="theme-mode">
        <label class="form-check-label" for="theme-mode">
        <i class="ai-sun fs-lg"></i>
        </label>
        <label class="form-check-label" for="theme-mode">
        <i class="ai-moon fs-lg"></i>
        </label>
        </div> *@

        <!-- Mobile menu toggler (Hamburger) -->
        <button class="navbar-toggler ms-sm-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navbar collapse (Main navigation) -->
        <nav class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav navbar-nav-scroll me-auto" style="--ar-scroll-height: 520px;">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">Home</NavLink>
                </li>

                <li class="nav-item dropdown">
                    <NavLink class="nav-link dropdown-toggle" href="categories" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                        Categories
                    </NavLink>
                    <ul class="dropdown-menu">
                        @*Sort blog post by categories foreach later*@
                        @if(categories != null)
                        {
                            @foreach (CategoryDTO category in categories)
                            {
                                <li>
                                    <a class="dropdown-item" href="category/@category.Id">
                                        @category.Name
                                    </a>
                                </li>
                            }
                        }

                    </ul>
                </li>
                <AuthorizeView Roles="Author">
                    <li class="nav-item dropdown">
                        <NavLink class="nav-link dropdown-toggle" href="author" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                            Author Menu
                        </NavLink>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/author/posts/create">New Post</a></li>
                            <li><a class="dropdown-item" href="/author/posts/manage">Manage Post</a></li>
                            <li><a class="dropdown-item" href="/author/categories/create">Manage Categories</a></li>
                        </ul>
                    </li>
                </AuthorizeView>

                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item dropdown">
                            <NavLink class="nav-link dropdown-toggle" href="Account/Manage" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                @(context.User?.Identity?.Name ?? "Account")
                            </NavLink>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item" href="Account/Manage">
                                        Profile
                                    </a>
                                </li>
                                <li>
                                    <form class="dropdown-item" action="Account/Logout" method="post">
                                        <AntiforgeryToken />
                                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                        <button type="submit" class="nav-link ps-0 py-0">Logout</button>
                                    </form>
                                </li>
                            </ul>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Login" Match="NavLinkMatch.All">Log In/Register</NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </nav>
    </div>
</header>

@code {
    private IEnumerable<CategoryDTO>? categories = [];

    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    protected override async Task OnParametersSetAsync()
    {
        categories = await CategoryService.GetCategoriesAsync();
    }


    // add onitilized for cateogries to list them in ur navbar make pagedlist so that u dont have a ton
    
    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
